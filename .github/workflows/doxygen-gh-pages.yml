name: Deploy Doxygen docs to Github Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [clang]
        include:
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      # 🧾 Checkout repo (with submodules)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo "docs-dir=${{ github.workspace }}/build/html" >> "$GITHUB_OUTPUT"

      # 🧩 Install dependencies (Doxygen + Graphviz)
      - name: Install Doxygen (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz
        
      # ⚙️ Configure CMake (including documentation)
      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-dir }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DBUILD_DOCS=ON
          -DBUILD_TESTING=OFF
          -S ${{ github.workspace }}

      # 🏗️ Build all (including docs)
      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }}

      # 📦 Upload documentation artifact (only once, Ubuntu)
      - name: Upload documentation artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.strings.outputs.docs-dir }}

  # 🌐 Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
